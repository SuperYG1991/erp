jQuery对象
jQuery对象就是通过jQuery包装DOM对象后产生的对象
如果一个对象是jQuery对象那么就可以使用jQuery里的方法。
DOM对象转成jQuery对象：
对于已经是DOM对象，只需要使用$()把DOM包起来就可以了
$(function(){
	var oDiv = document.getElementById("input");
	//转换
	var oJDiv = $(oDiv); 
});
<input type="text" id="input">

jQuery常用选择器：
基本选择器
通过id获取元素：$("#idValue")
通过class获取元素：$(".classValue")
元素选择器：$("eleName")
全部元素选择器：$("*")
叠加选择器：$("div,span,p.myClass")  你可以指定任意多个选择器，并将匹配到的元素合并到一个结果内。

层级选择器
ancestor descendant：$("form input") 在给定的form祖先元素下匹配所有的input后代元素
parent > child:$("form > input")  匹配表单中所有的子级input元素
prev + next：$("label + input")  匹配所有跟在 label 后面的 input 元素
prev ~ siblings：$("form ~ input")  找到所有与表单同辈的 input 元素

过滤选择器
first：$(li:first)    返回第一个li元素
last：$(li:last)    返回最后一个li元素
not(selector)：$("input:not(:checked)")    返回去除带有checked属性的input元素的其他所有input元素
even：$("tr:even")   匹配所有索引值为偶数的元素，从 0 开始计数
odd：$("tr:odd")   匹配所有索引值为奇数的元素，从 1 开始计数

属性选择器
:eq(index)：$("tr:eq(1)")  匹配一个给定索引值的元素
:gt(index)：$("tr:gt(0)")  匹配所有大于给定索引值的元素
:lt(index)：$("tr:lt(2)")  匹配所有小于给定索引值的元素

属性过滤选择器
[attribute]：$("div[id]")   匹配包含给定属性的元素
[attribute=value]：$("input[name='newsletter']")    匹配给定的属性是某个特定值的元素
[attribute!=value]：$("input[name!='newsletter']")   匹配所有不含有指定的属性，或者属性不等于特定值的元素。
[attribute^=value]：$("input[name^='news']")     匹配给定的属性是以某些值开始的元素
[attribute$=value]：$("input[name$='letter']")   匹配给定的属性是以某些值结尾的元素
[attribute*=value]：$("input[name*='man']")     匹配给定的属性是以包含某些值的元素
[attrSel1][attrSel2][attrSelN]：$("input[id][name$='man']")  复合属性选择器，需要同时满足多个条件时使用。

子元素选择器
:nth-child(index/odd/even)：$("ul li:nth-child(2)")   匹配其父元素下的第N个子或奇偶元素
:first-child:$("ul li:first-child")  等同于$("ul li:nth-child(1)")
:last-child:$("ul li:last-child")    匹配所有ul的最后一个li元素


文档处理
内部节点插入：
append和appendTo：
append是在A元素后面添加B元素
appendTo是把B元素添加到A元素之后
$(this).append("<span>你好</span>")

prepend和prependTo：
append是在A元素前面添加B元素
appendTo是把B元素添加到A元素之前
$("<li>item</li>").prependTo($(this));


外部节点插入：
after(content|fn)：在每个匹配的元素之后插入内容。
before(content|fn)：在每个匹配的元素之前插入内容
insertAfter(content)：把所有匹配的元素插入到另一个、指定的元素元素集合的后面。
insertBefore(content)：把所有匹配的元素插入到另一个、指定的元素元素集合的前面。

insertBefore和insertAfter有些类似于【“剪切”、“复制”】这样的操作

节点删除：
empty()：删除匹配的元素集合中所有的子节点。
remove([expr])：这个方法不会把匹配的元素从jQuery对象中删除，因而可以在将来再使用这些匹配的元素。
detach([expr])：与remove()不同的是，所有绑定的事件、附加的数据等都会保留下来。

克隆节点
clone([Even[,deepEven]])：克隆匹配的DOM元素并且选中这些克隆的副本。


属性操作
attr():
获取属性：$("img").attr("src")
设置属性：$("img").attr({width:100px,height:100px})
html()：
获取内容：$("div").html();
设置内容：$("div").html("<p>Hello World</p>");
text():
获取纯本文内容
设置纯文本内容
addClass():添加class属性
removeClass():删除class属性

attr和prop的区别
prop只处理boolean类型的属性，比如prop('checked',true)，单属性常用prop

常用工具
$.each(object, [callback]):遍历数组或对象中的数据
var obj ={"name":'yao',setName:function(name)
							{this.name=name;}
		}
$.each(obj,function(key,value){
	console.log(key,value);
})

$.parseJson(JsonObject):把Json解析成js数组或对象
var json={"name":"Jack","age",12};
console.log($.parseJson(json));

$.trim(Object):消除空格


jQuery元素尺寸
内容尺寸：
height():height
width():width
内部尺寸：
innerHeight():padding+height
innerWidth():padding+width
外部尺寸：
outerHeight(false/true):height+padding+border+(如果是true,则+margin)
outerWidth(false/true):width+padding+border+(如果是true,则+margin)


事件处理
1、事件绑定
on('事件',fn)
2、事件解绑
off('事件')
3、事件的坐标
event.clientX,event.clientY:相对于视窗的左上角
event.pageX,event.pageY:相对于页面的左上角
event.offsetX,event.offsetY:相对于页面的左上角
4、事件相关处理
停止事件冒泡：eventPropagation()
阻止事件默认行为：event.preventDefault()

*mouseover与mouserenter的区别
mouseover：在移入子元素时也会触发
mouseenter：只在移入当前元素时才触发
hover(function(){},function(){})使用的是mouseenter/mouseleave

*on('click',fn)和click(fn)的区别
on('click',fn)：通用但编码麻烦
click(fn):有时候没有对应的事件方法


事件委托
1、过程：将多个子元素的事件监听委托给父辈元素处理，监听回调是加在了父辈元素上，当操作任何一个子元素时，事件会冒泡到父辈元素
2、事件委托的双方：委托方、被委托方
3、使用事件委托的好处：
(1)添加新的元素，自动有事件响应处理
(2)减少事件监听的数量：从n==>1
4、jQuery的事件委托API：
(1)设置事件委托：$(parentSeletor).delegate(childrenSeletor,eventName,callback)
(2)移除事件委托：$(parentSeletor).undelegate(eventName)


jQuery内置动画
toggle
show
slideUp
slideDown



jQuery的ajax
$.ajax(jsonObj)

$.ajax({
	type:'',              ----- get或post
	url:'',
	data:{}               ----- 封装传入服务器端的数据
	dataType:''           ----- 返回的数据类型：text或json
	(async:true|false)
	success:funtion(data){}   ----- 服务器端正常返回结果执行的回调函数
	error:function(data){}
})


jQuery常用插件
jQueryUI：jqueryui.com
easyui：jeasyui.com
jQueryformvalidate
jQuery延迟加载插件


